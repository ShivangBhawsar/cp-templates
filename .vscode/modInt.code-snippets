{
"": {
  "prefix": "modInt",
  "body": [
    "template <int MOD>",
    "struct ModInt",
    "{",
    "    unsigned x;",
    "    ModInt() : x(0) {}",
    "    ModInt(signed sig) : x(sig) {}",
    "    ModInt(signed long long sig) : x(sig % MOD) {}",
    "    int get() const { return (int)x; }",
    "    ModInt pow(ll p)",
    "    {",
    "        ModInt res = 1, a = *this;",
    "        while (p)",
    "        {",
    "            if (p & 1)",
    "                res *= a;",
    "            a *= a;",
    "            p >>= 1;",
    "        }",
    "        return res;",
    "    }",
    "",
    "    ModInt &operator+=(ModInt that)",
    "    {",
    "        if ((x += that.x) >= MOD)",
    "            x -= MOD;",
    "        return *this;",
    "    }",
    "    ModInt &operator-=(ModInt that)",
    "    {",
    "        if ((x += MOD - that.x) >= MOD)",
    "            x -= MOD;",
    "        return *this;",
    "    }",
    "    ModInt &operator*=(ModInt that)",
    "    {",
    "        x = (unsigned long long)x * that.x % MOD;",
    "        return *this;",
    "    }",
    "    ModInt &operator/=(ModInt that) { return (*this) *= that.pow(MOD - 2); }",
    "",
    "    ModInt operator+(ModInt that) const { return ModInt(*this) += that; }",
    "    ModInt operator-(ModInt that) const { return ModInt(*this) -= that; }",
    "    ModInt operator*(ModInt that) const { return ModInt(*this) *= that; }",
    "    ModInt operator/(ModInt that) const { return ModInt(*this) /= that; }",
    "    bool operator<(ModInt that) const { return x < that.x; }",
    "    friend ostream &operator<<(ostream &os, ModInt a)",
    "    {",
    "        os << a.x;",
    "        return os;",
    "    }",
    "};",
    "typedef ModInt<998244353> mint;"
  ],
  "description": ""
}
}
